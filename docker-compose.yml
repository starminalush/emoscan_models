version: "3.7"
services:
  minio:
    image: minio/minio:latest
    hostname: minio
    container_name: minio
    restart: always
    volumes:
      - ./infrastracture_data/minio/data/:/data
    env_file:
      - .env
    ports:
      - "${MINIO_PORT}:9001"
      - "9000:9000"
    environment:
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY}
    command: ["server",  "--console-address", ":9001" , "/data/"]


  createbuckets:
    image: minio/mc
    env_file:
      - .env
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY};
      /usr/bin/mc mb myminio/${MINIO_BUCKET};
      /usr/bin/mc policy set public myminio/${MINIO_BUCKET};
      /usr/bin/mc alias set myminio http://minio:9000 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY};
      /usr/bin/mc mb myminio/${MINIO_MLFLOW_BUCKET};
      /usr/bin/mc policy set public myminio/${MINIO_MLFLOW_BUCKET};
      exit 0;
      "
      

  postgres:
    container_name: postgres
    image: postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /data/postgres

    volumes:
      - ./infrastracture_data/postgres:/data/postgres
    ports:
      - "${POSTGRES_EXTERNAL_PORT}:5432"


  mlflow:
    restart: always
    build: ./mlflow/
    container_name: mlflow_server
    env_file:
      - .env
    depends_on:
      - postgres
      - minio
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      MLFLOW_S3_ENDPOINT_URL: "http://minio:9000"
    ports:
      - "${MLFLOW_EXTERNAL_PORT}:5000"
    command: mlflow server --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB} --default-artifact-root s3://${MINIO_MLFLOW_BUCKET}/  --host 0.0.0.0

  train_models:
    restart: no
    build: ./
    runtime: nvidia
    volumes:
      - ./:/train_models
    container_name: train_models
    env_file:
      - .env
    environment:
      - NVIDIA_VISIBLE_DEVICES=0
    depends_on:
      - mlflow
    command: dvc repro experiments/dvc.yaml

